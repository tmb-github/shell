/* 
NB: Only :root variables that are NOT being revised by JavaScript
may be included in page *.css files. Those being revised by
JavaScript must be declared in common.css.
*/

@media all and (max-width: 464px) {
	.main.shell h1, 
	.main.shell h2 {
		margin: 0;
	}
}
/* From 464px: */
@media all and (min-width: 464px) {
	.main.shell h1, 
	.main.shell h2 {
		margin: revert;
		text-align: center;
	}
}

.main.shell div,
.main.shell p,
.main.shell section,
.main.shell form,
.main.shell hr,
.main.shell a,
.main.shell input {
	max-width: 62ch;
	margin-left: auto;
	margin-right: auto;
}

/*
Material Icons "open_in_new" glyph at end of linked text
*/
.body .shell .utility a[href*="//"][target*="link-viewer"]:not(.no-open-in-new):not(.ripple-button)::after,
.body .shell a[href*="//"]:not(.no-open-in-new):not(.ripple-button):not(.skip-to-main-content):not(.internal-anchor)::after {
	border-bottom-color: transparent;
	filter: invert(7%) sepia(100%) saturate(6561%) hue-rotate(247deg) brightness(115%) contrast(147%);
}

.body .shell .utility a[href*="//"][target*="link-viewer"]:not(.no-open-in-new):not(.ripple-button):hover::after,
.body .shell .utility a[href*="//"]:not(.no-open-in-new):not(.ripple-button):not(.skip-to-main-content):not(.internal-anchor):hover::after {
	background-color: transparent;
	border-bottom-color: transparent;
	color: var(--open-in-new-anchor-color-hover);
}

/* Pure red on "open in new" symbol on active */
.body .shell .utility a[href*="//"][target*="link-viewer"]:not(.no-open-in-new):not(.ripple-button)::after,
.body .shell .utility a[href*="//"]:not(.no-open-in-new):not(.ripple-button):not(.skip-to-main-content):not(.internal-anchor):active::after {
	filter: invert(15%) sepia(99%) saturate(7454%) hue-rotate(3deg) brightness(104%) contrast(114%);
}

/*
.body, .header, .header.header.header.header .primary-ul * {
	color: #545454;
	background-color: #fafafa;
}
*/

/* Revert some standard styles */

.main.shell * {
	padding: revert;
	margin: revert;
}

.main.shell a:not(.no-border-bottom) {
	color: revert;
	border: revert;
	margin: 0;
	width: fit-content;
}

.main.shell code[class$="selector"] {
	line-height: 2;
}

.main.shell .utility input {
	font-family: 'Consolas';
	font-weight: 700;
}

.main.shell h1,
.main.shell h2,
.main.shell h3 {
	font-weight: 700;
	font-family: 'Noto Sans', serif;
	overflow-wrap: break-word;
}

.main.shell h1 {
	font-size: 1.625em;
}

.main.shell h2 {
	font-size: 1.375em;
}

.main.shell code {
	font-family: Consolas, sans-serif;
	font-size: 18px;
	line-height: 1.5;
	margin: 0 -0.5em 0 0;
}

.main.shell .utility li {
	text-indent: unset;
}

code span {
	font-weight: 700;
}


@media screen and (max-width: 760px) {
	.main.shell {
		margin: var(--header-height) 1.5em 0 1.5em;
	}
}

@media screen and (min-width: 760px) {
	.main.shell {
		margin: var(--header-height) 22% 0 22%;
	}
}



/*** Main (.shell) ***/

.shell {
	margin: 0 0;
}

.shell a {
	display: inline-block;
	padding-bottom: .5em;
	margin-right: 0;
	word-break: break-all;
}

/* if an anchor is followed by a code block */
.shell a:has(+ code) {
	display: block;
}

.shell a img {
	float: left;
}

.shell .utility {
	margin-bottom: 1.5em;
}

.shell .display-none {
	display: none;
}



