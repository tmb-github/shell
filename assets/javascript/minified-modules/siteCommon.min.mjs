var clearInput,clearOutput,corsProxy,dataUtility,endpointSelectors,fetchJson,fetchProgress,fetchStatus,fieldsetControlsAndInfo,formatTime,formClasses,loadUtilityModules,setListeners,setSearchInputAriaLabel,setSearchInputSize,utilities,writeInfo;clearInput=function(c){var b;this.utility=null==(b=c.target.closest("section").dataset)?void 0:b.utility;document.querySelectorAll(this.dataUtility()+" "+this.formClasses(c.target)+" input").forEach(function(a){a.value=""})};
clearOutput=function(c){var b=this;var a;b.utility=null==(a=c.target.closest("section").dataset)?void 0:a.utility;a=[".fetch-status",".fetch-progress",".fetch-output"].map(function(d){return b.dataUtility()+" "+b.formClasses(c.target)+" "+d}).join(", ");document.querySelectorAll(a).forEach(function(d){d.innerHTML=""})};corsProxy="https://corsproxy.io/?";dataUtility=function(){return'[data-utility="'+this.utility+'"]'};
fetchJson=function(c,b){var a=this;fetch(c).then(function(d){if(!d.ok)throw Error("Network error");return d.json()}).then(b).catch(function(d){console.error("There was a problem with the fetch operation:",d);a.fetchProgress("<strong>Failure:</strong> Bad endpoint or server error.",!1)})};
fetchProgress=function(c,b){var a=this;(function(d){if(!d){d=document.createElement("P");var e;null==(e=document.querySelector(a.dataUtility()+" .fetch-progress"))||e.appendChild(d)}})(document.querySelector(a.dataUtility()+" .fetch-progress p"));(function(d){if(d){var e=document.createRange().createContextualFragment("<span>"+c+"</span>");d.appendChild(e)}})(document.querySelector(a.dataUtility()+" .fetch-progress p"));b||(a.intervalId&&window.clearInterval(a.intervalId),function(d){d&&d.removeAttribute("data-fetching")}(document.querySelector("section[data-fetching]")))};
fetchStatus=function(c){var b=document.querySelector(this.dataUtility()+" .fetch-status");b&&(c=document.createRange().createContextualFragment("<p>"+c+"</p>"),b.appendChild(c))};formatTime=function(c){return[Math.floor(c/1E3/60%60).toString(),Math.floor(c/1E3%60).toString().padStart(2,"0")].join(":")};formClasses=function(c){return c.closest("form").getAttribute("class").split(" ").map(function(b){return"."+b}).join("")};
loadUtilityModules=function(c){var b;var a=this;a.utilities=[];var d=[];document.querySelectorAll(".utility").forEach(function(f){a.utilities.push(f.dataset.utility);f=a.kebobCaseToCamelCase(f.dataset.utility);-1===d.indexOf(f)&&d.push(f)});var e=!1;var g=[];var h=[];var l=[];d.forEach(function(f){g.push(import("./utilities/"+f+".min.20231109004246.mjs").then(function(k){k=k.default;h.push(f);a.assignToModulePropertyOnCommonObject(a.pageNameCamelCase,k)}).catch(function(){e=!0;l.push(a.camelCaseToKebobCase(f))}))});
Promise.all(g).then(function(){e&&console.error("Warning: One or more data-utility attributes lack corresponding modules:\r\n"+l.join("\r\n"));b=a[c].returnMetaData(a);a.reviseMetaData(b);h.forEach(function(f){a[c][f]()})})};
setListeners=function(c){var b=this;(function(a){a&&!a.classList.contains("click-listener")&&(a.classList.add("click-listener"),a.addEventListener("click",function(d){var e=d.target.closest("section");e&&e.setAttribute("data-fetching",!0);b.clearOutput(d);c()}))})(document.querySelector(b.dataUtility()+" button.display-output"));(function(a){a&&!a.classList.contains("click-listener")&&(a.classList.add("click-listener"),a.addEventListener("click",b.clearInput))})(document.querySelector(b.dataUtility()+
" button.clear-input"));(function(a){a&&!a.classList.contains("click-listener")&&(a.classList.add("click-listener"),a.addEventListener("click",b.clearOutput))})(document.querySelector(b.dataUtility()+" button.clear-output"))};utilities=Array.from(document.querySelectorAll("section.utility")).map(function(c){var b;return null==(b=c.dataset)?void 0:b.utility});
writeInfo=function(c,b){this.html="";b(c);this.fetchProgress("<strong><em>Success!</em></strong>",!1);var a=document.createRange().createContextualFragment(this.html);(function(d){d&&(d.innerHTML="",d.appendChild(a))})(document.querySelector(this.dataUtility()+" .fetch-output"));document.querySelectorAll(this.dataUtility()+" .fetch-output input").forEach(function(d){d.classList.contains("click-listener")||(d.classList.add("click-listener"),d.addEventListener("click",function(e){e.target.checked?e.target.setAttribute("checked",
""):e.target.removeAttribute("checked");var g;null==(g=e.target.closest(".fetch-output"))||g.querySelectorAll("ul").forEach(function(h){h.scrollBy(-1*h.scrollWidth,0)})}))})};
endpointSelectors=function(){this.utilities.forEach(function(c){var b='[data-utility="'+c+'"]';document.querySelectorAll(b+' input[type="search"]').forEach(function(a){a.classList.contains("selector-listener")||(a.classList.add("selector-listener"),a.addEventListener("change",function(){document.querySelectorAll(b+" ."+a.getAttribute("list")).forEach(function(d){d.innerText=a.value});document.querySelectorAll(b+" a").forEach(function(d){d.href=d.innerText.trim()})}))})})};
fieldsetControlsAndInfo=function(c){var b=this.fiveRandomAlphaNumerics();var a=this.fiveRandomAlphaNumerics();c||(c="");return'<fieldset><legend>Controls & Info</legend><label for="'+a+'">Vertical list: <input type="checkbox" id="'+a+'" name="vertical-list"></label><label for="'+b+'">Reverse list: <input type="checkbox" id="'+b+'" name="reverse-list"></label>'+c+"</fieldset>"};
setSearchInputSize=function(){(function(c){c&&c.querySelectorAll("datalist").forEach(function(b){var a=0;Array.from(b.children).forEach(function(d){d.value.length>a&&(a=d.value.length)});b.setAttribute("data-length",a)})})(document.querySelector(".datalists"));document.querySelectorAll('.utility input[type="search"]').forEach(function(c){var b=document.querySelector("#"+c.getAttribute("list"));if(b){var a;c.setAttribute("size",parseInt(null==(a=b.dataset)?void 0:a.length,10)+5)}})};
setSearchInputAriaLabel=function(){document.querySelectorAll('.utility input[type="search"]').forEach(function(c){c.setAttribute("aria-label","Search "+c.getAttribute("list"))})};export default Object.freeze({clearInput, clearOutput, corsProxy, dataUtility, endpointSelectors, fetchJson, fetchProgress, fetchStatus, fieldsetControlsAndInfo, formatTime, formClasses, loadUtilityModules, setListeners, setSearchInputAriaLabel, setSearchInputSize, utilities, writeInfo}); 
