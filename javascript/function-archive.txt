/////////////// ARCHIVED FUNCTIONS AND OTHER INFO /////////////////

/*
//
// SAVE THIS:
//

iOS = function () {

// SAVE:
// 'this' is the outer 'o' via .bind(o), so the outer 'o' === inner 'o':
//	var o = this;

	var iDevices = [
		'iPad Simulator',
		'iPhone Simulator',
		'iPod Simulator',
		'iPad',
		'iPhone',
		'iPod'
	];

	if (Boolean(navigator.platform)) {
		while (iDevices.length) {
			if (navigator.platform === iDevices.pop()) {
				return true;
			}
		}
	}

	return false;

};
*/

/*
//
// SAVE THIS:
//

iosCheckAndEdit = function () {

// 'this' is the outer 'o' via .bind(o), so the outer 'o' === inner 'o':
	var o = this;

	if (o.iOS()) {
		document.querySelectorAll('.body').forEach(function (element) {
			element.classList.add('ios');
		});
	}

};
*/

/*
//
// SAVE THIS:
//

// Used in gallery.mjs at one point:
sleep = function (time) {

// SAVE:
// 'this' is the outer 'o' via .bind(o), so the outer 'o' === inner 'o':
//	var o = this;

	return new Promise(function (resolve) {
		setTimeout(resolve, time);
	});

};

// SLEEP:
sleepTime = 0;
*/

/*
//
// SAVE THIS:
//

wait = function (ms) {

// SAVE:
// 'this' is the outer 'o' via .bind(o), so the outer 'o' === inner 'o':
//	var o = this;

	return new Promise(function (resolve) {
		window.setTimeout(resolve, ms);
	});

};
*/

/*
//
// SAVE THIS:
//

waitAndSetHeaderHeight = function () {

// 'this' is the outer 'o' via .bind(o), so the outer 'o' === inner 'o':
	var o = this;

	o.wait(750).then(function () {
		o.resetHeaderHeightVariable();
	});

};
*/

/*
// NB: For testing live on *.webhostapp.com:
webhostAppEdits = function () {

// 'this' is the outer 'o' via .bind(o), so the outer 'o' === inner 'o':
	var o = this;

// Escape forward slashes in the text:
	document.querySelectorAll(o.escapeForwardSlashes('a[href*="https://www.000webhost.com/"]')).forEach(function (element) {
		element.parentElement.remove();
	});

	document.querySelectorAll('footer ~ script').forEach(function (element) {
		if (element.type !== 'application/ld+json') {
			element.remove();
		}
	});

};
*/

/*
// KEEP: Use if we need to make a deep copy of an object:
//if (typeof Object.create !== 'function') {
//	Object.create = function (o) {
//		function F() {
//			return undefined;
//		}
//		F.prototype = o;
//		return new F();
//	};
//}
*/

// Once we've abstracted all of the page-specific code to modules,
// we should be able to abstract all of the utility functions used by
// all the functions to a module that may have to be loaded into the
// "global" o object, so they likely go into a dynamically loaded
// module as well, but it should be loaded at the bottom of this file,
// near where commonRoutines() is called for the first time on window.load.

// To move a function into a module, do the following:
// * Copy the function into JSLint in a browser beside Chrome
// * Add (o) as its argument
// * Lint it
// * For every undeclared variable it finds:
//   1) put o. before each instance of that variable in the JSLint editor
//   2) search for that variable in THIS file and put o. before it
//   3) rem-out the declaration of that variable in this file
//   4) put o. before the function name in this file
//   5) put o. before every reference to this function in this file
// * Test the edited code to ensure it works with the new, o. prefixes
// ...if it works:
// * Delete the function from this file.
// * Copy the function from the JSLint editor into the target module
// * Declare the function in the target module
// * Update the export statement at the bottom of the module
// * Test the site to see if it accepts the codes as a dynamic module import


// The promiseLoader() replaced this static block:
/*

// === ARTWORK-EDITOR === //

	if ((o.pageName === 'artwork-editor') && (o.loadedDependencies[o.pageName] === false)) {
		import('./artworkEditor.mjs').then(function ({default: object}) {
			o.assignToCommonObject(object);
// Prep for promiseLoader:
			assignFn = function () {
				o.tinymce = window.tinymce;
			};
			promiseLoader(['tinymce'], ['javascript/scripts/tinymce/tinymce.min.js'], assignFn);
			o.loadedDependencies[o.pageName] = true;
		});

// === ABOUT === //

	} else if ((o.pageName === 'about') && (o.loadedDependencies[o.pageName] === false)) {
		import('./about.mjs').then(function ({default: object}) {
			o.assignToCommonObject(object);
			o.loadedDependencies[o.pageName] = true;
// NB: promiseLoader() calls inner() at its end, so if the promiseLoader() is
// not being used, inner() must be called in its place:
			inner();
		});

// === CONTACT === //

	} else if ((o.pageName === 'contact') && (o.loadedDependencies[o.pageName] === false)) {
		import('./contact.mjs').then(function ({default: object}) {
			o.assignToCommonObject(object);
			o.loadedDependencies[o.pageName] = true;
// NB: promiseLoader() calls inner() at its end, so if the promiseLoader() is
// not being used, inner() must be called in its place:
			inner();
		});

// === GALLERY === //

	} else if ((o.pageName === 'gallery') && (o.loadedDependencies[o.pageName] === false)) {
		import('./gallery.mjs').then(function ({default: object}) {
			o.assignToCommonObject(object);
// Prep for promiseLoader:
			assignFn = function () {
				o.pureJsCarousel = window.pureJsCarousel;
			};
			promiseLoader(['pureJsCarousel'], ['javascript/scripts/pureJsCarousel.js'], assignFn);
			o.loadedDependencies[o.pageName] = true;
		});

// === GALLERY-EDITOR === //

	} else if ((o.pageName === 'gallery-editor') && (o.loadedDependencies[o.pageName] === false)) {
		import('./galleryEditor.mjs').then(function ({default: object}) {
			o.assignToCommonObject(object);
// Prep for promiseLoader:
			assignFn = function () {
				o.Sortable = window.Sortable;
			};
			promiseLoader(['Sortable'], ['javascript/scripts/Sortable.js'], assignFn);
			o.loadedDependencies[o.pageName] = true;
		});

// === GALLERY-ORDERING === //

	} else if ((o.pageName === 'gallery-ordering') && (o.loadedDependencies[o.pageName] === false)) {
		import('./galleryOrdering.mjs').then(function ({default: object}) {
			o.assignToCommonObject(object);
// Prep for promiseLoader:
			assignFn = function () {
				o.Sortable = window.Sortable;
			};
			promiseLoader(['Sortable'], ['javascript/scripts/Sortable.js'], assignFn);
			o.loadedDependencies[o.pageName] = true;
		});

// === HOME === //

	} else if ((o.pageName === 'home') && (o.loadedDependencies[o.pageName] === false)) {
//console.log(o.loadedHomeDependencies);
		import('./home.mjs').then(function ({default: object}) {
			o.assignToCommonObject(object);
			o.loadedDependencies[o.pageName] = true;
//console.log(o.loadedHomeDependencies);
// NB: promiseLoader() calls inner() at its end, so if the promiseLoader() is
// not being used, inner() must be called in its place:
			inner();
		});

// === NEWS-ITEM-EDITOR === //

	} else if ((o.pageName === 'news-item-editor') && (o.loadedDependencies[o.pageName] === false)) {
		import('./newsItemEditor.mjs').then(function ({default: object}) {
			o.assignToCommonObject(object);
// Prep for promiseLoader:
			assignFn = function () {
				o.tinymce = window.tinymce;
			};
			promiseLoader(['tinymce'], ['javascript/scripts/tinymce/tinymce.min.js'], assignFn);
			o.loadedDependencies[o.pageName] = true;
		});

	} else {
		inner();
	}

*/
