.tmb-alert .tmb-alert-content .h1 {
	font-size: 1.5rem;
	font-style: italic;

	letter-spacing: .15rem;
	margin-bottom: .5rem;
	text-align: center;
	text-shadow: 0 0 1px #fff, 0 0 0 #adadad, 1px 1px 0 #adadad, 1px 1px 1px #adadad;
	word-spacing: .15rem;
}

.tmb-alert .copyright {
	font-size: .625em;
	text-align: center;
}


.tmb-alert .tmb-alert-content img {
	max-width: 100%;
	max-height: 100%;
}

/*
// SVG elements CANNOT have pseudo-elements attached to them.
// So, to perform opacity transition on background of SVG,
// we have to put the SVG inside a button and create a pseudo-element
// on the button, and perform the opacity transition on the pseudo-element.
*/

.tmb-alert .tmb-alert-content .svg-close-button {
	width: 24px;
	height: 24px;
	position: absolute;
	top: 1em;
	right: 1em;
	background-color: transparent;
	box-shadow: none;
}

.tmb-alert .tmb-alert-content .svg-close-button::before {
	width: 32px;
	height: 32px;
	border-radius: 20px;
	position: absolute;
	top: -4px;
	right: -4px;
	background: #e6e6e6;
	opacity: 0;
	transition: opacity 0.3s ease-in-out;
	content: '';
}

.tmb-alert .tmb-alert-content .svg-close-button:hover::before {
	opacity: 1;
}

.tmb-alert .tmb-alert-content .svg-close-button:active::before {
	background-color: transparent;
}

.tmb-alert .tmb-alert-content .svg-close-icon {
	position: absolute;
	top: 0;
	right: 0;
}

.tmb-alert .tmb-alert-content .svg-close-icon:active {
	border-radius: 20px;
	box-shadow: 0 0 8px rgba(0,0,0,0.4);
	transform: translateY(1.5px);
	background-color: #bfbfbf;
}




.tmb-alert .tmb-alert-dimmer,
.tmb-alert .tmb-alert-modal {
	position: fixed;
	left: 0;
	bottom: 0;
	right: 0;
	margin: 0;
	padding: 0;
	transform: scaleX(1);
	z-index: 999;
}

.tmb-alert .tmb-alert-dimmer {
	animation: alert-show-dimmer 200ms;
	top: 0;
	opacity: .5;
	background-color: #252525;
}

.tmb-alert .tmb-alert-modal {
	animation: alert-show-modal 200ms;
	top: var(--header-height);
	opacity: 1;
	overflow-y: auto;
	z-index: 9998;
}

.tmb-alert.tmb-alert-hidden .tmb-alert-modal,
.tmb-alert.tmb-alert-hidden .tmb-alert-dimmer {
	opacity: 0;
	transform: scaleX(0);
}

.tmb-alert.tmb-alert-hidden .tmb-alert-modal {
	animation: alert-hide-modal 200ms;
}

.tmb-alert.tmb-alert-hidden .tmb-alert-dimmer {
	animation: alert-hide-dimmer 200ms;
}


.tmb-alert .tmb-alert-dialog {
	border-radius: 12.5px;
	position: relative;
/*	margin: 5% auto; */
	margin: 24px auto;
	min-height: 110px;
	max-width: 500px;
/*	padding: 24px 24px 0 24px; */
	padding: 16px 16px 0 16px;
	background-color: #fff;
}


.tmb-alert .tmb-alert-body .tmb-alert-content {
/*	padding: 16px; */
	padding: 16px;
}

.tmb-alert .tmb-alert-footer {
	border-radius: 12.5px;
	padding: 4px;
/*
	margin-left: -24px;
	margin-right: -24px;
*/
	margin-left: -16px;
	margin-right: -16px;
	min-height: 43px;
	background-color: #fff;
}

.tmb-alert .tmb-alert-buttons {
	text-align: right;
}

.tmb-alert .tmb-alert-button {
	margin: 0 1em .625em 0;
	min-width: 88px;
	min-height: 35px;
	border-radius: 20px;
	background-color: #e6e6e6;
	border: transparent;
	box-shadow: 0 0 4px rgba(0, 0, 0, 40%);
	padding: 8px;
}

.tmb-alert .tmb-alert-button:disabled {
	cursor: not-allowed;
}

.tmb-alert .tmb-alert-button:not([disabled]):active {
	box-shadow: 0 0 8px rgba(0,0,0,0.4);
	transform: translateY(1.5px);
	background-color: #bfbfbf;
}

/* To replace <center> tag in one of the alerts in Number Up! */
.tmb-alert .center {
	display: flex; 
	justify-content: center; 
	text-align: center;
}

@media screen and (max-width: 568px) {

	.tmb-alert .tmb-alert-modal {
		padding: 0 5%;
	}

	.tmb-alert .tmb-alert-dialog {
		margin: 16px auto;
	}

}

/* https://autoprefixer.github.io/ */

@keyframes alert-show-dimmer {
  0% {
    opacity: 0;
  }
  100% {
    opacity: .5;
  }
}


@keyframes alert-hide-dimmer {
  0% {
    opacity: .5;
  }
  90% {
    opacity: 0;
  }
  100% {
    opacity: 0;
  }
}


@keyframes alert-show-modal {
  0% {
    opacity: 0;
    transform: translateY(30px);
  }
  100% {
    opacity: 1;
    transform: translateY(0px);
  }
}


@keyframes alert-hide-modal {
  0% {
    opacity: 1;
    transform: translateY(0px);
  }
  90% {
    opacity: 0;
  }
  100% {
    opacity: 0;
    transform: translateY(60px);
  }
}
